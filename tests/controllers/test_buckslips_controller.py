# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from lob.api_helper import APIHelper
from lob.models.beforeafter import Beforeafter
from lob.models.buckslip_editable import BuckslipEditable


class BuckslipsControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(BuckslipsControllerTests, cls).setUpClass()
        cls.controller = cls.client.buckslips
        cls.response_catcher = cls.controller.http_call_back

    # Returns a list of your buckslips. The buckslips are returned sorted by creation date, with the most recently created buckslips appearing first.
    def test_buckslips_list(self):
        # Parameters for the API call
        limit = 10
        before_after = None
        include = None

        # Perform the API call through the SDK function
        result = self.controller.buckslips_list(limit, before_after, include)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


    # Creates a new buckslip given information
    def test_buckslip_create(self):
        # Parameters for the API call
        body = APIHelper.json_deserialize('{"description":"Test buckslip","front":"https://s3-us-west-2.amazo'
            'naws.com/public.lob.com/assets/buckslip.pdf","back":"https://s3-us'
            '-west-2.amazonaws.com/public.lob.com/assets/buckslip.pdf"}', BuckslipEditable.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.buckslip_create(body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)


