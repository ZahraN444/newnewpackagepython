# -*- coding: utf-8 -*-

"""
lob

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from lob.api_helper import APIHelper
from lob.models.beforeafter import Beforeafter


class TemplatesControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(TemplatesControllerTests, cls).setUpClass()
        cls.controller = cls.client.templates
        cls.response_catcher = cls.controller.http_call_back

    # Returns a list of your templates. The templates are returned sorted by creation date, with the most recently created templates appearing first.
    def test_templates_list(self):
        # Parameters for the API call
        limit = 10
        before_after = None
        include = None
        date_created = None
        metadata = None

        # Perform the API call through the SDK function
        result = self.controller.templates_list(limit, before_after, include, date_created, metadata)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"data":[{"id":"tmpl_d5a5a89da9106f8","description":"Test Template'
            '","versions":[{"id":"vrsn_232a02fb8224791","suggest_json_editor":t'
            'rue,"description":"Test Template","engine":"legacy","html":"HTML f'
            'or ","date_created":"2019-07-27T23:49:01.512Z","date_modified":"20'
            '19-07-27T23:49:01.512Z","object":"version"}],"published_version":{'
            '"id":"vrsn_232a02fb8224791","suggest_json_editor":false,"descripti'
            'on":"Test Template","engine":"handlebars","html":"HTML for ","date'
            '_created":"2019-07-27T23:49:01.512Z","date_modified":"2019-07-27T2'
            '3:49:01.512Z","object":"version"},"metadata":{},"date_created":"20'
            '19-07-27T23:49:01.511Z","date_modified":"2019-07-27T23:49:01.511Z"'
            ',"object":"template"},{"id":"tmpl_59b2150ae120887","description":"'
            'Test Template","versions":[{"id":"vrsn_2a7eb63ccb795b9","descripti'
            'on":"Test Template","html":"HTML for ","date_created":"2019-03-29T'
            '10:22:34.643Z","date_modified":"2019-03-29T10:22:34.643Z","object"'
            ':"version"}],"published_version":{"id":"vrsn_2a7eb63ccb795b9","des'
            'cription":"Test Template","html":"HTML for ","date_created":"2019-'
            '03-29T10:22:34.643Z","date_modified":"2019-03-29T10:22:34.643Z","o'
            'bject":"version"},"metadata":{},"date_created":"2019-03-29T10:22:3'
            '4.642Z","date_modified":"2019-03-29T10:22:34.642Z","object":"templ'
            'ate"}],"object":"list","previous_url":null,"next_url":"https://api'
            '.lob.com/v1/templates?limit=2&after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy'
            '0yOVQxMDoyMjozNC42NDJaIiwiaWRPZmZzZXQiOiJ0bXBsXzU5YjIxNTBhZTEyMDg4'
            'NyJ9","count":2}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

